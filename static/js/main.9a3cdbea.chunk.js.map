{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addSelectedGood","good","setState","removeSelectedGood","filter","item","clearSelectedGood","showListGoods","length","toString","endsWith","slice","join","this","className","type","onClick","map","classNames","App__item","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,CAAC,QAFnB,EAKEC,gBAAkB,SAACC,GACjB,IAAQF,EAAiB,EAAKD,MAAtBC,aAER,EAAKG,SAAS,CAAEH,aAAa,GAAD,mBAAMA,GAAN,CAAoBE,OARpD,EAWEE,mBAAqB,SAACF,GACpB,IAAQF,EAAiB,EAAKD,MAAtBC,aAER,EAAKG,SAAS,CAAEH,aAAcA,EAAaK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,QAdvE,EAiBEK,kBAAoB,WAClB,EAAKJ,SAAS,CAAEH,aAAc,MAlBlC,EAqBEQ,cAAgB,WACd,IAAQR,EAAiB,EAAKD,MAAtBC,aAER,OAAQA,EAAaS,QACnB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,OACET,EAAaU,WAAWC,SAAS,KAAjC,UACOX,EADP,2BAEOA,EAFP,gBAKJ,QACE,MAAM,GAAN,OACKA,EAAaY,MAAM,GAAI,GACvBC,KAAK,MAFV,0CAIMb,EAAaA,EAAaS,OAAS,GAJzC,gCAnCR,4CA6CE,WAAU,IAAD,OACCT,EAAiBc,KAAKf,MAAtBC,aAER,OACE,sBAAKe,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACGf,EAAaS,OAAS,GAEnB,wBACEO,KAAK,SACLD,UAAU,2BACVE,QAAS,kBAAM,EAAKV,qBAHtB,uBAQJ,qBAAIQ,UAAU,aAAd,UACG,IACAD,KAAKN,sBAGV,oBAAIO,UAAU,YAAd,SACGlB,EAAgBqB,KAAI,SAAAZ,GAAI,OACvB,qBAEES,UAAWI,IAAW,CACpBC,WAAW,EACX,oBAAqBpB,EAAaqB,SAASf,KAJ/C,UAOGA,EACD,wBACEU,KAAK,SACLD,UAAU,WACVE,QAAS,kBACPjB,EAAaqB,SAASf,GAClB,EAAKF,mBAAmBE,GACxB,EAAKL,gBAAgBK,IAN7B,SASGN,EAAaqB,SAASf,GACnB,SACA,UAlBDA,eArEnB,GAAyBgB,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a3cdbea.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addSelectedGood = (good: string) => {\n    const { selectedGood } = this.state;\n\n    this.setState({ selectedGood: [...selectedGood, good] });\n  };\n\n  removeSelectedGood = (good: string) => {\n    const { selectedGood } = this.state;\n\n    this.setState({ selectedGood: selectedGood.filter(item => item !== good) });\n  };\n\n  clearSelectedGood = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  showListGoods = () => {\n    const { selectedGood } = this.state;\n\n    switch (selectedGood.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return (\n          selectedGood.toString().endsWith('s')\n            ? `${selectedGood} are selected`\n            : `${selectedGood} is selected`\n        );\n\n      default:\n        return (\n          `${selectedGood.slice(0, -1)\n            .join(', ')}\n            and\n            ${selectedGood[selectedGood.length - 1]}\n            are selected`\n        );\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__header\">\n          {selectedGood.length > 0\n            && (\n              <button\n                type=\"button\"\n                className=\"App__btn App__btn--clear\"\n                onClick={() => this.clearSelectedGood()}\n              >\n                Clear all\n              </button>\n            )}\n          <h1 className=\"App__title\">\n            {' '}\n            {this.showListGoods()}\n          </h1>\n        </div>\n        <ul className=\"App__list\">\n          {goodsFromServer.map(item => (\n            <li\n              key={item}\n              className={classNames({\n                App__item: true,\n                'App__item--remove': selectedGood.includes(item),\n              })}\n            >\n              {item}\n              <button\n                type=\"button\"\n                className=\"App__btn\"\n                onClick={() => (\n                  selectedGood.includes(item)\n                    ? this.removeSelectedGood(item)\n                    : this.addSelectedGood(item)\n                )}\n              >\n                {selectedGood.includes(item)\n                  ? 'Remove'\n                  : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}